import { User } from '../db/sequelize.js';
import { ValidationError, UniqueConstraintError } from 'sequelize';
import { v4 as uuidv4 } from 'uuid';

export default (app) => {
  app.post('/api/createticket/:userId', async (req, res) => {
    try {
      const userId = req.params.userId;
      const uniqueTicket = uuidv4(); // Generate a unique ticket

      // Update the user's record with the unique ticket
      const [updatedRowsCount] = await User.update(
        { ticket: uniqueTicket },
        { where: { id: userId } }
      );

      if (updatedRowsCount === 0) {
        // If no rows were updated, the user with the specified ID doesn't exist
        return res.status(404).json({ message: 'User not found' });
      }

      const message = `Unique ticket ${uniqueTicket} has been created for user with ID ${userId}.`;
      res.json({ message, userId });
    } catch (error) {
      if (error instanceof ValidationError || error instanceof UniqueConstraintError) {
        return res.status(400).json({ message: error.message, error });
      }

      console.error('Error creating unique ticket:', error);
      const message = 'Unique ticket could not be created. Please try again later.';
      res.status(500).json({ message, data: error });
    }
  });
};
